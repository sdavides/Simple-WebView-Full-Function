

###########################################################
     Create APP MANUAL empty activity Android Studio
###########################################################
1 create activity_main.xml:

<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity"
    android:orientation="horizontal">

    <ProgressBar
        android:id="@+id/progress"
        style="@android:style/Widget.DeviceDefault.Light.ProgressBar"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:layout_marginTop="0dp"
        android:layout_marginBottom="0dp" />

    <WebView
    android:id="@+id/webView"
    android:layout_width="match_parent"
    android:layout_height="match_parent"/>

</LinearLayout>

################################################
2 create MainActivity.java:

package com.youtubemod.app;

import android.content.Intent;
import android.content.res.Configuration;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;
import android.os.Build;
import android.os.Bundle;
import android.support.annotation.RequiresApi;
import android.support.v4.app.ActivityCompat;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.webkit.WebChromeClient;
import android.webkit.WebResourceError;
import android.webkit.WebResourceRequest;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.webkit.WebViewClient;
import android.widget.FrameLayout;
import android.widget.ProgressBar;

public class MainActivity extends AppCompatActivity {

    WebView webView;
    ProgressBar progressBar;

    @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN_MR1)
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        webView = findViewById(R.id.webView);
        progressBar = (ProgressBar) findViewById(R.id.progress);

        webView.setWebViewClient(new Browser_Home());
        webView.setWebChromeClient(new ChromeClient());
        WebSettings webSettings = webView.getSettings();
        webView.clearHistory();
        webView.clearFormData();
        webView.clearCache(true);
        webSettings.setJavaScriptEnabled(true);
        webSettings.setJavaScriptCanOpenWindowsAutomatically(true);
        webView.getSettings().setDomStorageEnabled(true);
        webSettings.setAllowFileAccess(true);
        webSettings.setAppCacheEnabled(true);
        /*webSettings.setAllowFileAccess(true);*/
        /*webSettings.setAppCacheEnabled(true);*/
        webView.getSettings().setMediaPlaybackRequiresUserGesture(false);/*autoplay video api level 17+*/
        webView.setScrollBarStyle(WebView.SCROLLBARS_OUTSIDE_OVERLAY);
        webSettings.setLoadWithOverviewMode(true);

        loadWebSite();

    }

    private void loadWebSite() {
        webView.loadUrl("file:///android_asset/www/index.html");
    }

    @Override
    public void onBackPressed() {
        if(webView!= null && webView.canGoBack()){
            webView.goBack();
        }else{
            //super.onBackPressed(); ? best finish() ?
            ActivityCompat.finishAffinity(MainActivity.this);
            android.os.Process.killProcess(android.os.Process.myPid());
            finish(); //kill app no previous page open
        }
    }

    @Override
    public void onConfigurationChanged(Configuration newConfig) {
        super.onConfigurationChanged(newConfig);
    }

    private class Browser_Home extends WebViewClient {
        Browser_Home(){}
        public void onProgressChanged(WebView view, int newProgress) {
            progressBar.setVisibility(View.VISIBLE);
            progressBar.setProgress(newProgress);
        }

        @Override
        public void onPageStarted(WebView view, String url, Bitmap favicon) {
            super.onPageStarted(view, url, favicon);
        }

        @Override
        public void onPageFinished(WebView view, String url) {
            super.onPageFinished(view, url);
            progressBar.setVisibility(View.GONE);
        }

        @Override
        public boolean shouldOverrideUrlLoading(WebView view, String url) {
            if(url.contains(".apk")) { //check for internal url
                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                startActivity(intent);
            }
            if(url.contains("youtube.com")) { //check for internal url
                return super.shouldOverrideUrlLoading(view, url);
            }else{
                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                startActivity(intent);
                return true;
            }
        }
	
	@Override
        public void onReceivedError (WebView view, int errorCode, String description, String failingUrl){
            if(description.contains("net::ERR")) { //check error
                webView.loadUrl("file:///android_asset/www/404.html");
            }
        }

    }

    private class ChromeClient extends WebChromeClient {
        private View mCustomView;
        private WebChromeClient.CustomViewCallback mCustomViewCallback;
        protected FrameLayout mFullscreenContainer;
        private int mOriginalOrientation;
        private int mOriginalSystemUiVisibility;

        ChromeClient() {}

        public Bitmap getDefaultVideoPoster()
        {
            if (mCustomView == null) {
                return null;
            }
            return BitmapFactory.decodeResource(getApplicationContext().getResources(), 2130837573);
        }

        public void onHideCustomView()
        {
            ((FrameLayout)getWindow().getDecorView()).removeView(this.mCustomView);
            this.mCustomView = null;
            getWindow().getDecorView().setSystemUiVisibility(this.mOriginalSystemUiVisibility);
            setRequestedOrientation(this.mOriginalOrientation);
            this.mCustomViewCallback.onCustomViewHidden();
            this.mCustomViewCallback = null;
        }

        public void onShowCustomView(View paramView, WebChromeClient.CustomViewCallback paramCustomViewCallback)
        {
            if (this.mCustomView != null)
            {
                onHideCustomView();
                return;
            }
            this.mCustomView = paramView;
            this.mOriginalSystemUiVisibility = getWindow().getDecorView().getSystemUiVisibility();
            this.mOriginalOrientation = getRequestedOrientation();
            this.mCustomViewCallback = paramCustomViewCallback;
            ((FrameLayout)getWindow().getDecorView()).addView(this.mCustomView, new FrameLayout.LayoutParams(-1, -1));
            getWindow().getDecorView().setSystemUiVisibility(3846 | View.SYSTEM_UI_FLAG_LAYOUT_STABLE);
        }
	
    }
}

################################################
3 Create new folder -> "asset folder" from right click folder "app"

create folder assets
\src\main\assets\

create simple folder www 
\src\main\assets\www

create file index and 404, \src\main\assets\www\index.html and \src\main\assets\www\404.html
create file index.html
create file 404.html

redirect javascript example index.html:
<body onload="myFunction()">
<script>
    function myFunction() {
	if(navigator.platform.indexOf("") != -1 )
    {
         window.location.href = "https://youtube.com";
    }
}
</script>

################################################
4 create AndroidManifest.xml

<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.youtubemod.app">

    <uses-permission
        android:name="android.permission.INTERNET" />

    <uses-permission
        android:name="android.permission.WAKE_LOCK" />

    <application
        android:usesCleartextTraffic="true"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/Theme.AppCompat.Light.NoActionBar">
        <activity
            android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize"
            android:name=".MainActivity">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>
</manifest>
		
				
###############################
###############################
###############################

Information AndroidManifest.xml:

	internet permission:
<uses-permission
        android:name="android.permission.INTERNET" />

	no screen standby:
    <uses-permission
        android:name="android.permission.WAKE_LOCK" />

	http 80 enable:
android:usesCleartextTraffic="true"

	No Title bar APP:
change in application: android:theme AndroidManifest.xml
android:theme="@style/Theme.AppCompat.Light.NoActionBar">

	config screen
android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|uiMode|screenSize|smallestScreenSize"


###############################
###############################
###############################

Information activity_main.xml:


	Name package:
package com.youtubemod.app;
	
	
	Javascript enable:		
webSettings.setJavaScriptEnabled(true);


	Autoplay video:
webView.getSettings().setMediaPlaybackRequiresUserGesture(false);/*autoplay video api level 17+*/


	First page:
private void loadWebSite() {
        webView.loadUrl("file:///android_asset/www/index.html");
    }
	

	Back button previous page:
@Override
    public void onBackPressed() {
        if(webView!= null && webView.canGoBack()){
            webView.goBack();
        }else{
            //super.onBackPressed(); ? best finish() ?
            ActivityCompat.finishAffinity(MainActivity.this);
            android.os.Process.killProcess(android.os.Process.myPid());
            finish(); //kill app no previous page open
        }
    }

	No reset WebView when rotation screen:
@Override
    public void onConfigurationChanged(Configuration newConfig) {
        super.onConfigurationChanged(newConfig);
    }
	
	
	Download file apk enable: Check the url string, redirect external link in external browser,
	and all link with "youtube.com" remain in webview except ".apk"
@Override
        public boolean shouldOverrideUrlLoading(WebView view, String url) {
            if(url.contains(".apk")) { //check for internal url
                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                startActivity(intent);
            }
            if(url.contains("youtube.com")) { //check for internal url
                return super.shouldOverrideUrlLoading(view, url);
            }else{
                Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));
                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                startActivity(intent);
                return true;
            }
        }
		
		
	Error Page:
@Override
        public void onReceivedError (WebView view, int errorCode, String description, String failingUrl){
            if(description.contains("net::ERR")) { //check error
                webView.loadUrl("file:///android_asset/www/404.html");
            }
        }
		
		
	Video Fullscreen button	enable:
private class ChromeClient extends WebChromeClient  .....


###############################
###############################
###############################
